// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 626ggfSgCYVT2YHifhdAKj
// Component: KgfyBnMsIRuw

"use client";

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/navigation";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/host";

import Button from "../../Button"; // plasmic-import: O1n4fOqLki7Y/component
import MetricItem from "../../MetricItem"; // plasmic-import: B5OJ7qr5HdQi/component
import Feature from "../../Feature"; // plasmic-import: N8GF-mSkeZPv/component
import PlansPage from "../../PlansPage"; // plasmic-import: cl1GdMVQa0_D/component
import Testimonial from "../../Testimonial"; // plasmic-import: k3jrNqyKj3c3/component

import { useScreenVariants as useScreenVariantsvUzx0AI3UQDj } from "./PlasmicGlobalVariant__Mobile"; // plasmic-import: vUZX0aI3uQDj/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_zig_trade_option.module.css"; // plasmic-import: 626ggfSgCYVT2YHifhdAKj/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: KgfyBnMsIRuw/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: 8Ohe9_jUnbeW/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: ZxojYksPfqIt/icon
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: VL4wHCX4TafM/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: E2IyFdJSVNPC/icon
import Icon5Icon from "./icons/PlasmicIcon__Icon5"; // plasmic-import: m28aarTDGjCL/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: Flex__<"div">;
  plansPage?: Flex__<typeof PlansPage>;
  link?: Flex__<"a"> & Partial<LinkProps>;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const globalVariants = ensureGlobalVariants({
    mobile: useScreenVariantsvUzx0AI3UQDj()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <section className={classNames(projectcss.all, sty.section__ma1ZV)}>
            <div className={classNames(projectcss.all, sty.freeBox__pufsM)}>
              <div className={classNames(projectcss.all, sty.freeBox__nRosn)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___7C7Ic
                  )}
                >
                  {"Welcome To zig trade Option"}
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__zAsIz)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__iuAaA)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3ZiBk
                      )}
                    >
                      {"Invest in Your Future with Confidence"}
                    </div>
                  </div>
                </div>
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___8JoGj)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__e3Ipp
                  )}
                >
                  {
                    "Discover endless possibilities for your financial growth with Zig Trade Option. We specialize in guiding you towards intelligent investment choices that illuminate your path to prosperity. With our expert insights and innovative strategies, your financial dreams are within reach."
                  }
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___1KRvE)}
                >
                  <Button
                    className={classNames("__wab_instance", sty.button__k5T2F)}
                    color={"teal"}
                    link={"/signup"}
                  >
                    {"Get Started "}
                  </Button>
                  <Button
                    className={classNames("__wab_instance", sty.button__zdC0Z)}
                    color={"teal"}
                    ghost={true}
                    link={`/about`}
                  >
                    {"Learn More"}
                  </Button>
                </Stack__>
              </Stack__>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__sHxuT)}>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__oZmCp)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/zig_trade_option/images/chartpng.png",
                  fullWidth: 2360,
                  fullHeight: 666,
                  aspectRatio: undefined
                }}
              />
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__b1BkJ)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__bb4Vf
              )}
            >
              {"Featured In"}
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__iA4Ra)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___6KJlX
                )}
              >
                {"Financial Times"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___6WYih
                )}
              >
                {"Forbes"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__gFbNp
                )}
              >
                {"Bloomberg"}
              </div>
            </Stack__>
          </section>
          <section className={classNames(projectcss.all, sty.section__qhr7Y)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__cnzBo)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dAHn
                )}
              >
                {"Trusted by Numbers"}
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__hRmSh)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__srhm
                  )}
                >
                  {
                    "At Zig Trade Option, our results speak volumes. We are dedicated to delivering exceptional outcomes for our clients, backed by solid performance metrics:"
                  }
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__xhP7N)}
                >
                  <MetricItem
                    className={classNames(
                      "__wab_instance",
                      sty.metricItem__cfjhV
                    )}
                  />

                  <MetricItem
                    className={classNames(
                      "__wab_instance",
                      sty.metricItem__qpaz5
                    )}
                    slot={"Average annual ROI"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__r6CgQ
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{"12"}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#00CCCC" }}
                        >
                          {"%"}
                        </span>
                      </React.Fragment>
                    </div>
                  </MetricItem>
                  <MetricItem
                    className={classNames(
                      "__wab_instance",
                      sty.metricItem__rbYu
                    )}
                    slot={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nG2M
                        )}
                      >
                        {"client retention rate"}
                      </div>
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bvmP
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{"95"}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#00CCCC" }}
                        >
                          {"%"}
                        </span>
                      </React.Fragment>
                    </div>
                  </MetricItem>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <section className={classNames(projectcss.all, sty.section__hd1Bv)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__t9Uog)}
            >
              <Feature
                className={classNames("__wab_instance", sty.feature__abhLb)}
              >
                <Icon6Icon
                  className={classNames(projectcss.all, sty.svg__ogauj)}
                  role={"img"}
                />
              </Feature>
              <Feature
                className={classNames("__wab_instance", sty.feature__e9Jus)}
                slot={
                  "Access a wide range of investment options, from stocks and bonds to cryptocurrencies, creating a balanced and resilient portfolio."
                }
                slot2={"Diverse Portfolio"}
              >
                <Icon3Icon
                  className={classNames(projectcss.all, sty.svg__oLwq)}
                  role={"img"}
                />
              </Feature>
              <Feature
                className={classNames("__wab_instance", sty.feature__wfv3R)}
                slot={
                  "Stay informed with regular and transparent reports on your portfolio's performance and growth."
                }
                slot2={"Transparent Reporting"}
              >
                <Icon5Icon
                  className={classNames(projectcss.all, sty.svg__lUroA)}
                  role={"img"}
                />
              </Feature>
            </Stack__>
          </section>
          <section
            className={classNames(projectcss.all, sty.section__quB2H)}
            id={"#plans"}
          >
            <PlansPage
              data-plasmic-name={"plansPage"}
              data-plasmic-override={overrides.plansPage}
              className={classNames("__wab_instance", sty.plansPage)}
            />
          </section>
          <section
            className={classNames(projectcss.all, sty.section__ejkZl)}
            id={"about"}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__jgsdq)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___9Kb0Y)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___2Yo8Z)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rceS4
                    )}
                  >
                    {"Instant Loans For Investor"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lM41R
                    )}
                  >
                    {
                      "Get Access To Loan Up To $50,000 For Platinum Plan and premium plan."
                    }
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <section className={classNames(projectcss.all, sty.section___07Aj)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__seZB)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__kQnZ)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__yMgp5
                  )}
                >
                  {"Trusted by Thousands"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wFs3C
                  )}
                >
                  {
                    "Join the ever-growing community of satisfied investors who have chosen Zig Trade Option as their investment partner. "
                  }
                </div>
                <PlasmicLink__
                  data-plasmic-name={"link"}
                  data-plasmic-override={overrides.link}
                  className={classNames(projectcss.all, projectcss.a, sty.link)}
                  component={Link}
                  href={`/about`}
                  platform={"nextjs"}
                >
                  <Button
                    className={classNames("__wab_instance", sty.button__cKNtu)}
                    color={"teal"}
                  >
                    {"Learn More"}
                  </Button>
                </PlasmicLink__>
              </Stack__>
              <div className={classNames(projectcss.all, sty.freeBox__sjhap)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__xEuhl)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/zig_trade_option/images/phonepng.png",
                    fullWidth: 576,
                    fullHeight: 1152,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
          </section>
          <section className={classNames(projectcss.all, sty.section__dSxq9)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__joSnU
              )}
            >
              {"Testimonials"}
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___2S22B)}
            >
              <Testimonial
                className={classNames("__wab_instance", sty.testimonial__wKwQ)}
                slot={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__iw7MT)}
                    displayHeight={"30px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"30px"}
                    loading={"lazy"}
                    src={
                      "https://images.unsplash.com/photo-1553514029-1318c9127859?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=464&q=80"
                    }
                  />
                }
              >
                {
                  "Zig Trade Option has transformed the way I view investing. Their strategies have consistently delivered impressive results, giving me the confidence to secure my financial future."
                }
              </Testimonial>
              <Testimonial
                className={classNames("__wab_instance", sty.testimonial__a9N30)}
                slot2={"Michael L."}
                slot3={"Investor"}
              >
                {
                  "I've been with Zig Trade Option for over three years, and I've seen my investments flourish even in challenging times. Their expertise and commitment are truly remarkable."
                }
              </Testimonial>
              <Testimonial
                className={classNames("__wab_instance", sty.testimonial__uy5Ri)}
                slot={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__kxxNk)}
                    displayHeight={"30px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"30px"}
                    loading={"lazy"}
                    src={
                      "https://images.unsplash.com/photo-1546961329-78bef0414d7c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=387&q=80"
                    }
                  />
                }
              >
                {
                  "Zig Trade Option has transformed the way I view investing. Their strategies have consistently delivered impressive results, giving me the confidence to secure my financial future."
                }
              </Testimonial>
            </Stack__>
          </section>
          <section className={classNames(projectcss.all, sty.section__rzQaq)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___6Hd8Y)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__a0USz)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__fscCa)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/zig_trade_option/images/windowpng2.png",
                    fullWidth: 2260,
                    fullHeight: 1484,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__zsz5D)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__uO11Q
                  )}
                >
                  {"Ready to Start?"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8AKeI
                  )}
                >
                  {
                    "Take the first step towards a brighter financial future with Zig Trade Option. Our proven strategies and dedicated team are here to guide you every step of the way."
                  }
                </div>
                <Button
                  className={classNames("__wab_instance", sty.button__ioRtq)}
                  color={"teal"}
                  link={"/signup"}
                >
                  {"Get Started Today"}
                </Button>
              </Stack__>
            </Stack__>
          </section>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "plansPage", "link"],
  plansPage: ["plansPage"],
  link: ["link"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  plansPage: typeof PlansPage;
  link: "a";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    plansPage: makeNodeComponent("plansPage"),
    link: makeNodeComponent("link"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
